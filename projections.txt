// NOTE: this sample projection immediately stops in one-time mode unless you have 
    // either event_type1 or event_type1 events in the store
    options({

                // reorderEvents: false,          // enables event reordering in a multi-stream projection
                                                  // event reordering attempts to feed the projection with events in a 
                                                  // their natural order
                // processingLag: 0,              // processing lag in ms allowing event reordering to happen
    });

    fromAll() 
    // fromStream('streamId') | fromStreams(['sream1', 'stream2']) | fromCategory('category')
       //NOTE: fromCategory requires $by_category standard projection to be enabled

    // .foreachStream() | .partitionBy(function(e) { return e.body.useId; })

    .when({
        $init: function () {
            return { count: 0 }; // initial state
        },
      
        ActivityCompleted: function(s, e) {
            //  emit('streamId', 'eventType', {/* event body */} [, {/* optional event metadata */}]);
            //  linkTo('streamId', e [, {/* optional link-to-event metadata */}]);
            //  copyTo('streamId', e);
            s.count += 1;
            return s;
        },
                        
        event_type2: function(s, e) {
            s.count2 += 1;
            return s;
        },
                        
                        
        /* $any: function (s, e) ... // NOTE: $any is exclusive and cannot be used in combination with 
                                     // other event filters
        */
    })
    // .filterBy(f)/transformBy(f)
    // .outputTo(name[, namePattern]) // defines a name for the output stream               
                        
    //NOTE: filterBy(), transformBy(), emit(), linkTo(), copyTo() require "emit enabled" (see checkbox below)
                            
                        

                        
    // NOTE: this sample projection immediately stops in one-time mode unless you have 
    // either event_type1 or event_type1 events in the store
    options({

                // reorderEvents: false,          // enables event reordering in a multi-stream projection
                                                  // event reordering attempts to feed the projection with events in a 
                                                  // their natural order
                // processingLag: 0,              // processing lag in ms allowing event reordering to happen
    });

    fromCategory('activities') 
    // fromStream('streamId') | fromStreams(['sream1', 'stream2']) | fromCategory('category')
       //NOTE: fromCategory requires $by_category standard projection to be enabled

    // .foreachStream() | .partitionBy(function(e) { return e.body.useId; })

    .when({
      
        ActivityCompleted: function(s, e) {
            linkTo('everything-' + e.data.user, e);
            var i;
            for(i = 0; i < e.data.mentions.length; ++i){
                linkTo('everything-' + e.data.mentions[i], e);
            }
            return s;
        },
                            
        /* $any: function (s, e) ... // NOTE: $any is exclusive and cannot be used in combination with 
                                     // other event filters
        */
    })
    // .filterBy(f)/transformBy(f)
    // .outputTo(name[, namePattern]) // defines a name for the output stream               
                        
    //NOTE: filterBy(), transformBy(), emit(), linkTo(), copyTo() require "emit enabled" (see checkbox below)
                            
                        